{"version":3,"file":"static/js/293.82f8221d.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const MovieList = styled.ul`\nlist-style: none;\n`;\n\nexport const MovieItem = styled.li`\nwidth: 400px;\nborder-radius: 12px;\nmargin-bottom:${p => p.theme.spacing(2)};\npadding: ${p => p.theme.spacing(2)};\n/* font-size: 18px; */\n/* background-color: #75bcbd; */\nfont-size: 20px;\nfont-weight: 300;\nbox-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\n\n&.hover{\n   \n    background-color: ${({ theme }) => theme.colors.backgraund};\n}\n`;\n\nexport const LinkStyled = styled(Link)`\ntext-decoration: none;\ncolor: ${({ theme }) => theme.colors.header};\ntransition: color 250ms;\n\n&.hover.active {\n    color: ${({ theme }) => theme.colors.active};\n}\n`;\n","import { useLocation } from \"react-router-dom\"\nimport { MovieList, MovieItem, LinkStyled } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <div>\n            <MovieList>\n                {movies.map(({ id, title, original_title, name }) => (\n                    <MovieItem key={id}>\n                    <LinkStyled to={`/movies/${id}`} state={{ from: location }}>\n                      {title ?? original_title ?? name} \n                     </LinkStyled>\n                    </MovieItem>\n                ))}\n               \n            </MovieList>\n        </div>\n    )\n}\n\n\n\n","import styled from \"styled-components\";\nimport { ErrorMessage, Form, Field } from 'formik';\n\n\nexport const SearchForm = styled(Form)`\n  position: relative;\n  display: flex;\n  gap: ${p => p.theme.spacing(4)};\n  width: 100%;\n  max-width: 400px;\n  height: 60%;\n  margin: 0 auto;\n`;\n\n\nexport const SearchInput = styled(Field)`\ndisplay: inline-block;\nwidth: 400px;\nheight: 32px;\n margin-left: 14px; \n/* margin-left: 8px; */\nfont: inherit;\nfont-size: 20px;\nborder: none;\noutline: none;\npadding: ${p => p.theme.spacing(3)};\ncolor:${({ theme }) => theme.colors.input};\nborder-radius: 15px;\nbox-shadow: rgba(0, 0, 0, 0.08) 0px 4px 12px;\n\n\n&:hover {\n    border: 2px solid ${({ theme }) => theme.colors.border};\n    }\n\n    &::placeholder {\nfont: inherit;\nfont-size: 18px;\ncolor:${({ theme }) => theme.colors.border};\n    }\n`;\n\nexport const SearchBtn = styled.button`\ndisplay: inline-block;\nposition: absolute;\ntop: 1%;\nright: 10px;\nwidth: 32px;\nheight: 32px;\nborder: none;\noutline: none;\nborder-radius: 15px;\nbackground-color: transparent;\ncursor: pointer;\ncolor:${({ theme }) => theme.colors.header};\n\ntransition:  250ms cubic-bezier(0.4, 0, 0.2, 1);\n font-size: 32px;\n&:hover {\n    color:${({ theme }) => theme.colors.backgraund};}\n    \n`;\n\nexport const ErrMsg = styled(ErrorMessage)`\ncolor: ${({ theme }) => theme.colors.error};\nfont-size: 16px;\nmargin-top: 4px;\nmargin-bottom: 8px;\nwidth: auto;\npadding-left: 16px;\n`;\n\n\nexport const Resetbtn = styled.button`\n\nwidth: 32px;\nheight: 32px;\npadding: ${p => p.theme.spacing(1)};\nbackground: transparent;\nborder-color: transparent;\nbox-shadow: rgba(0, 0, 0, 0.24) 0px 3px 8px;\nborder-radius: 50%;\nfont-size: 20px;\ncolor: ${({ theme }) => theme.colors.header};\ntransition: 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n&:hover {\n    background: ${({ theme }) => theme.colors.backgraund};\n    cursor: pointer;\n\n}\n\n`;\n\n// export const LinkToHome = styled(icon)`\n// position: absolute;\n// top: 10%;\n// right: 2px;\n// color: ${({ theme }) => theme.colors.header};\n// transition: color 250ms;\n// font-size: 30px;\n\n// margin: 0 auto;\n\n\n// &:active {\n//     color: ${({ theme }) => theme.colors.active};\n\n// }\n// `","// import { useSearchParams } from 'react-router-dom';\nimport { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { IoSearchCircleSharp } from \"react-icons/io5\";\nimport {  ErrMsg, SearchBtn, SearchForm, SearchInput } from \"./SearchBar.styled\";\nimport { Toaster } from 'react-hot-toast';\n// import { IoTrashOutline } from \"react-icons/io5\";\n\nexport const SearchBar = ({ onSubmit }) => {\n\n    // const[searchParams, setSearchParams] = useSearchParams();\n    // const query = searchParams.get(\"query\") ?? \"\";\n    \n    const handleSubmit = (value) => {\n        // searchParams.set('query', value.query);\n       onSubmit(value);\n    }\n\n    // const reset = () => {\n    //     setSearchParams({ query: \"\"});\n    // };\n    \n\n    const searchSchema = Yup.object().shape({\n        query: Yup.string().trim().lowercase().required('This field is required'),\n    });\n\n    return (\n       \n        <Formik\n            initialValues={{\n                query: '',\n            }}\n            validationSchema={searchSchema}\n            // value={query}\n            onSubmit={(values, actions) => {\n                handleSubmit(values.query);\n                actions.resetForm();\n            }}\n        >\n\n\n            <SearchForm>\n                <label>\n                    <SearchInput\n                        name=\"query\"\n                        type=\"text\"\n                        autoComplete=\"off\"\n                        autoFocus\n                        placeholder=\"Search interesting film\"\n                    />\n                    <ErrMsg component=\"div\" name=\"query\" />\n                </label>\n\n                <SearchBtn type=\"submit\">\n                <IoSearchCircleSharp />\n                </SearchBtn>\n                <Toaster/>\n                {/* <Resetbtn onClick={reset}>\n                <IoTrashOutline/>\n                </Resetbtn> */}\n            </SearchForm>\n        </Formik>\n      \n    );\n\n}\n\n","import styled from \"styled-components\";\n\nexport const MovieConText = styled.div`\nmargin: 0 auto;\n`;","import React from \"react\";\nimport { getMovieByQuery } from \"api\";\nimport { SearchBar } from \"components/SearchBar/SearchBar\";\nimport { useEffect, useState } from \"react\";\nimport {  useSearchParams } from \"react-router-dom\";\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { MovieConText } from \"./Movies.styled\";\n\n\nexport default function MoviesPage() {\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [searchParams, setSearchParams] = useSearchParams();\n\n   \nuseEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) {\n        return\n    }\n\n    const moviesQuery = async () => {\n        try {\n            setLoading(true);\n            const fetchMovies = await getMovieByQuery(query);\n            setMovies(fetchMovies.results);\n        } catch (error) {\n            setError(true)\n        } finally {\n            setLoading(false)\n        }\n    };\n    moviesQuery();\n}, [searchParams]);\n\nconst handleSubmit= value => {\n    setSearchParams({ query: value });\n   \n};\n\nreturn ( \n    <MovieConText>\n        <SearchBar onSubmit={handleSubmit} />\n        {movies.length > 0 && <MoviesList movies={movies}/>}\n          \n        {loading && (\n            <InfinitySpin \n            width='200'\n            color=\"#4fa94d\"\n          />\n        )}\n        {movies.length === 0 && <p>Please, enter a name</p>}\n        {error && <p>Whoops!</p>}\n    </MovieConText>\n);\n}\n\n\n\n\n\n\n\n"],"names":["MovieList","styled","_templateObject","_taggedTemplateLiteral","MovieItem","_templateObject2","p","theme","spacing","_ref","colors","backgraund","LinkStyled","Link","_templateObject3","_ref2","header","_ref3","active","MoviesList","movies","location","useLocation","_jsx","children","map","id","title","original_title","name","to","concat","state","from","SearchForm","Form","SearchInput","Field","input","border","SearchBtn","_ref4","_ref5","ErrMsg","ErrorMessage","_templateObject4","_ref6","error","_templateObject5","_ref7","_ref8","SearchBar","onSubmit","handleSubmit","value","searchSchema","Yup","shape","query","trim","lowercase","required","Formik","initialValues","validationSchema","values","actions","resetForm","_jsxs","type","autoComplete","autoFocus","placeholder","component","IoSearchCircleSharp","Toaster","MovieConText","MoviesPage","_useState","useState","_useState2","_slicedToArray","setMovies","_useState3","_useState4","setError","_useState5","_useState6","loading","setLoading","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","get","moviesQuery","_asyncToGenerator","_regeneratorRuntime","_callee","fetchMovies","_context","prev","next","getMovieByQuery","sent","results","t0","finish","stop","apply","arguments","length","InfinitySpin","width","color"],"sourceRoot":""}